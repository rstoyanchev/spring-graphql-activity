plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.netflix.dgs.codegen' version '6.1.10'
}

group = 'com.example'
version = '1.0.0'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'net.datafaker:datafaker:2.2.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework:spring-webflux'
	testImplementation 'org.springframework.graphql:spring-graphql-test'
}

generateJava {
	schemaPaths = ["${projectDir}/src/main/resources/graphql"]
	packageName = 'com.example.activity.codegen'
	includeQueries = ["athlete"]
	generateClient = true
}

tasks.register('clientRun', JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	mainClass = 'com.example.activity.ClientApp'
}

tasks.register('clientDgsRun', JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	mainClass = 'com.example.activity.ClientDgsApp'
}

tasks.named('test') {
	useJUnitPlatform()
}
